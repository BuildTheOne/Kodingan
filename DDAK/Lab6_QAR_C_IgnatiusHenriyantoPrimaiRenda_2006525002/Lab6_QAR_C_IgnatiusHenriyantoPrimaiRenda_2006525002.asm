;====================================================================
; Processor		: ATmega8515
; Compiler		: AVRASM
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

.include "m8515def.inc"
.def temp = r16 ; temporary register
.def led_data = r17
;todo
;define new register for counter
.def counter_arah = r20
.def counter_delay = r21

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

.org $00
rjmp MAIN
;todo
;initialize interrupt vector
.org $01
rjmp GANTI_ARAH
.org $02
rjmp GANTI_DELAY

;====================================================================
; CODE SEGMENT
;====================================================================

MAIN:

INIT_STACK:
	ldi temp, low(RAMEND)
	ldi temp, high(RAMEND)
	out SPH, temp

INIT_LED:
	ser temp ; load $FF to temp
	out DDRC,temp ; Set PORTC to output

INIT_INTERRUPT:
	ldi temp, 0b00001010 ;todo: setting MCUCR sehingga interrupt aktif ketika falling edge
	out MCUCR,temp
	ldi temp, 0b11000000 ;todo: setting GICR untuk enable external interrupt 0 dan 1
	out GICR,temp
	sei

LED_LOOP_MASUK:
	ldi led_data,0x00
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b10000001 ;todo: Setting kondisi LED #1
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b01000010 ;todo: Setting kondisi LED #2
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b00100100 ;todo: Setting kondisi LED #3
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b00011000 ;todo: Setting kondisi LED #4
	out PORTC,led_data ; Update LEDS
	rcall DELAY

    ;todo
	cpi counter_arah, 0xFF ; compare dengan $FF pada button
	breq LED_LOOP_KELUAR   ; Jika sama, masuk ke LED_LOOP_KELUAR

	rjmp LED_LOOP_MASUK

LED_LOOP_KELUAR:
	ldi led_data,0x00
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b00011000 ;todo: Setting kondisi LED #1
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b00100100 ;todo: Setting kondisi LED #2
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b01000010 ;todo: Setting kondisi LED #3
	out PORTC,led_data ; Update LEDS
	rcall DELAY
	ldi led_data, 0b10000001 ;todo: Setting kondisi LED #4
	out PORTC,led_data ; Update LEDS
	rcall DELAY

    ;todo
	cpi counter_arah, 0x00 ; compare dengan $00 pada button
	breq LED_LOOP_MASUK    ; Jika sama, masuk ke LED_LOOP_MASUK

	rjmp LED_LOOP_KELUAR

DELAY:
    ;todo
	cpi counter_delay, 0x00 ; compare counter_delay dengan $00
	breq DELAY_01           ; Jika sama, masuk ke DELAY_01
	brne DELAY_02           ; Jika tidak sama, masuk ke DELAY_02

GANTI_ARAH:
    ;todo
	ldi temp, 0xFF          ; load $FF ke temp
	EOR counter_arah, temp  ; xor antara nilai temp dengan counter_arah (button)
	cpi counter_arah, 0x00  ; compare counter_arah dengan $00
	breq LED_LOOP_MASUK     ; Jika sama, masuk ke LED_LOOP_MASUK
	brne LED_LOOP_KELUAR    ; Jika beda, masuk ke LED_LOOP_KELUAR

GANTI_DELAY:
    ;todo
	ldi temp, 0xFF          ; load $FF ke temp
	EOR counter_delay, temp ; xor antara nilai temp dengan counter_delay
	rcall DELAY             ; call subroutine DELAY

DELAY_01:
; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
;
; DELAY_CONTROL 40 000 cycles
; 5ms at 8.0 MHz

	ldi  r18, 52
	ldi  r19, 242
	
L1: 
	dec  r19
	brne L1
	dec  r18
	brne L1
	nop
	reti ; ubah ke reti agar keluar dari intterupt

DELAY_02:
; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
;
; Delay 160 000 cycles
; 20ms at 8.0 MHz

	ldi  r18, 208
	ldi  r19, 202


L2: 
	dec  r19
	brne L2
	dec  r18
	brne L2
	nop
	reti ; ubah ke reti agar keluar dari intterupt
